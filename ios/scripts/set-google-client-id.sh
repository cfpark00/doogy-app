#!/bin/bash

# Script to set Google OAuth Client ID in iOS build
# This script reads from .env file and updates the xcconfig

set -e

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
IOS_DIR="${SCRIPT_DIR}/.."
ENV_FILE="${IOS_DIR}/.env"
XCCONFIG_FILE="${IOS_DIR}/Doogy/Config.xcconfig"

# Check if .env file exists
if [ ! -f "$ENV_FILE" ]; then
    echo "Warning: $ENV_FILE not found. Using example values for development."
    echo "For production builds, create $ENV_FILE with your actual Google Client ID."
    
    # Use placeholder values for development
    GOOGLE_IOS_CLIENT_ID="PLACEHOLDER-CLIENT-ID"
else
    # Source the .env file
    source "$ENV_FILE"
fi

# Validate that we have a client ID
if [ -z "$GOOGLE_IOS_CLIENT_ID" ]; then
    echo "Error: GOOGLE_IOS_CLIENT_ID not set in $ENV_FILE"
    exit 1
fi

# Generate the reversed client ID
# Format: com.googleusercontent.apps.XXXXXX-XXXXXX
REVERSED_CLIENT_ID="com.googleusercontent.apps.${GOOGLE_IOS_CLIENT_ID%%.*}"

# Create or update the xcconfig file
cat > "$XCCONFIG_FILE" << EOF
// Auto-generated file - DO NOT EDIT DIRECTLY
// Generated by scripts/set-google-client-id.sh

// Google OAuth Configuration
GOOGLE_IOS_CLIENT_ID = ${GOOGLE_IOS_CLIENT_ID}
GOOGLE_IOS_REVERSED_CLIENT_ID = ${REVERSED_CLIENT_ID}
EOF

echo "âœ… Google Client ID configuration updated successfully"
echo "   Client ID: ${GOOGLE_IOS_CLIENT_ID}"
echo "   Reversed Client ID: ${REVERSED_CLIENT_ID}"